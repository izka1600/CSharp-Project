using Microsoft.CSharp;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace Reflection
{
    //https://stackoverflow.com/questions/47767871/dynamically-create-c-sharp-class-or-object
    public class Program
    {
        public class FirstClass
        {
            public List<Foo> FooList { get; set; }
        }

        public class Foo
        {
            //Ex:
            //public string Name{ get; set; }  
        }

        public static void Main(string[] args)
        {

        // my dynamic classes will inherite from Foo class
        var bar1Code = @"
                                public class Bar1 : Foo
                                {
                                    public Bar1(int value)
                                    {
                                        NewProperty = value;
                                    }
                                    public int NewProperty {get; set; }
                                }";

            var compilerResults = new CSharpCodeProvider().CompileAssemblyFromSource(
                new CompilerParameters
                {
                    GenerateInMemory = true,
                    ReferencedAssemblies =
                    {
                        "System.dll",
                        Assembly.GetExecutingAssembly().Location
                    }
                },bar1Code);

            var bar1Type = compilerResults.CompiledAssembly.GetType("Bar1");

            var firstClass = new FirstClass
            {
                FooList = new List<Foo>
                    {
                        (Foo)Activator.CreateInstance(bar1Type, 56),
                    }
            };

            var dynamicFoo = (dynamic)firstClass.FooList[0];
            int i = dynamicFoo.NewProperty; // should be 56
            Console.WriteLine(i);
            Console.ReadKey();


        }
    }
}
