//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Arkusz_Wydatki_WPF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Arkusz_WydatkiEntities : DbContext
    {
        public Arkusz_WydatkiEntities()
            : base("name=Arkusz_WydatkiEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__EFMigrationsHistory> C__EFMigrationsHistory { get; set; }
        public virtual DbSet<AspNetRoleClaims> AspNetRoleClaims { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<AspNetUserTokens> AspNetUserTokens { get; set; }
        public virtual DbSet<Kategorie> Kategorie { get; set; }
        public virtual DbSet<Plan> Plan { get; set; }
        public virtual DbSet<Podkategorie> Podkategorie { get; set; }
        public virtual DbSet<Transakcje> Transakcje { get; set; }
        public virtual DbSet<Uzytkownik> Uzytkownik { get; set; }
    
        [DbFunction("Arkusz_WydatkiEntities", "splitstring")]
        public virtual IQueryable<splitstring_Result> splitstring(string stringToSplit)
        {
            var stringToSplitParameter = stringToSplit != null ?
                new ObjectParameter("stringToSplit", stringToSplit) :
                new ObjectParameter("stringToSplit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<splitstring_Result>("[Arkusz_WydatkiEntities].[splitstring](@stringToSplit)", stringToSplitParameter);
        }
    
        public virtual int AddTransactionToPlan(Nullable<decimal> amount, Nullable<int> plan_ID)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var plan_IDParameter = plan_ID.HasValue ?
                new ObjectParameter("Plan_ID", plan_ID) :
                new ObjectParameter("Plan_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTransactionToPlan", amountParameter, plan_IDParameter);
        }
    
        public virtual ObjectResult<RaportFromSomeMonths_Result> RaportFromSomeMonths(Nullable<int> userId, string plan_ID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var plan_IDParameter = plan_ID != null ?
                new ObjectParameter("Plan_ID", plan_ID) :
                new ObjectParameter("Plan_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RaportFromSomeMonths_Result>("RaportFromSomeMonths", userIdParameter, plan_IDParameter);
        }
    }
}
